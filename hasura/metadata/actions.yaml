actions:
  - name: UpdateUserAsUser
    definition:
      kind: synchronous
      handler: https://yaqeen-neon.hasura.app/v1/graphql
      forward_client_headers: true
      request_transform:
        body:
          action: transform
          template: "{\n  \"query\": \"mutation UpdateUser($user: Users_insert_input!, $patient: Patients_insert_input!) { delete_InterestUser(where: {UsersUserId: {_eq: \\\"{{$body.session_variables.x-hasura-user-id}}\\\" } }) { affected_rows } insert_Users_one(object: $user, on_conflict: {constraint: PK_Users, update_columns: [FirstName, LastName, Gender]}) { UserId } insert_Patients_one(object: $patient, on_conflict: {constraint: PK_Patients, update_columns: [AgeGroup, CancerTypeId, CancerStageId]}) { UserId } }\",\n  \"variables\": {\n    \"user\": { \"FirstName\": {{$body.input.user.firstName}}, \"LastName\": {{$body.input.user.lastName}}, \"Gender\": {{$body.input.user.gender}}, \"InterestUsers\": { \"data\": {{ range _, x := $body.input.user.interests }} { \"InterestsInterestId\": {{x}} } {{ end }} } }, \n    \"patient\": { \"AgeGroup\": {{$body.input.user.patient.ageGroup}}, \"CancerTypeId\": {{$body.input.user.patient.cancerTypeId}}, \"CancerStageId\": {{$body.input.user.patient.cancerStageId}} }\n  }\n}"
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "userId": {{$body.data.insert_Patients_one.UserId}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
  - name: file_get
    definition:
      kind: ""
      handler: https://filesystem.haytham-d6b.workers.dev/api/files/batch/
      headers:
        - name: X-Custom-Auth-Key
          value_from_env: R2_AUTH_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
                "paths": [
                    "{{escapeUri($body.input.path)}}"
                ]
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "url": {{$body.urls[0].signed_url}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
      - role: anonymous
  - name: file_get_batch
    definition:
      kind: ""
      handler: https://filesystem.haytham-d6b.workers.dev/api/files/batch/
      forward_client_headers: true
      headers:
        - name: X-Custom-Auth-Key
          value_from_env: R2_AUTH_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "paths": {{$body.input.paths}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
      - role: anonymous
  - name: getCronEvents
    definition:
      kind: ""
      handler: https://yaqeen-neon.hasura.app/v1/metadata
      headers:
        - name: x-hasura-admin-secret
          value: uX2ZGvqvwy67m4q
      request_transform:
        body:
          action: transform
          template: |-
            {
                "type": "get_scheduled_events",
                "args": {
                    "type": "cron",
                    "trigger_name": "{{$body.input.scheduleId}}",
                    "limit": 4,
                    "offset": 0,
                    "get_row_count": false,
                    "status": ["scheduled"]
                }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
    comment: getCronEvents
  - name: getOneOffEvents
    definition:
      kind: ""
      handler: https://yaqeen-neon.hasura.app/v1/metadata
      headers:
        - name: x-hasura-admin-secret
          value: uX2ZGvqvwy67m4q
      request_transform:
        body:
          action: transform
          template: |-
            {
                "type": "get_scheduled_events",
                "args": {
                    "type": "one_off",
                    "limit": 4,
                    "offset": 0,
                    "get_row_count": false,
                    "status": ["scheduled"]
                }
            }
        method: POST
        query_params: {}
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
    comment: getOneOffEvents
  - name: getUploadUrl
    definition:
      kind: ""
      handler: https://filesystem.haytham-d6b.workers.dev/api/files/
      headers:
        - name: X-Custom-Auth-Key
          value_from_env: R2_AUTH_KEY
      request_transform:
        body:
          action: transform
          template: |-
            {
              "path": "{{concat([$body.session_variables.x-hasura-user-id, "/", $body.input.filePath])}}"
            }
        method: PUT
        query_params: {}
        template_engine: Kriti
        version: 2
      response_transform:
        body:
          action: transform
          template: |-
            {
              "path": {{$body.path}},
              "signedUrl": {{$body.signed_url}}
            }
        template_engine: Kriti
        version: 2
    permissions:
      - role: user
custom_types:
  enums: []
  input_objects:
    - name: UpdateDoctorInput
    - name: UpdatePatientInput
    - name: UpdateUserInput
    - name: CronTriggerInput
  objects:
    - name: FileGetOutput
    - name: SignedUrl
    - name: FileGetBatchOutput
    - name: UpdateUserOutput
    - name: CronTriggerOutput
    - name: TriggerEvent
    - name: GetUploadUrlOutput
  scalars: []
