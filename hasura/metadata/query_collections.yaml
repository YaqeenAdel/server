- name: allowed-queries
  definition:
    queries:
      - name: DeleteInterests
        query: |
          mutation DeleteInterests ($InterestId: Int!) {
            delete_Interests_by_pk(InterestId: $InterestId) {
              InterestId
              Name
            }
          }
      - name: InsertInterests
        query: |
          mutation InsertInterests ($object: Interests_insert_input!) {
            insert_Interests_one(object: $object) {
              Active
              LogoURL
              Name
            }
          }
      - name: UpdateInterests
        query: |
          mutation UpdateInterests ($InterestId: Int!, $object: Interests_set_input!) {
            update_Interests_by_pk(pk_columns: {InterestId:$InterestId}, _set: $object) {
              Active
              InterestId
              LogoURL
              Name
            }
          }
      - name: insert_InterestDoctor_one
        query: |
          mutation insert_InterestDoctor_one ($object: InterestDoctor_insert_input!) {
            insert_InterestDoctor_one(object: $object) {
              DoctorId
              InterestId
            }
          }
      - name: InterestDoctor_delete
        query: |
          mutation delete_InterestDoctor_by_pk ($DoctorId: String!, $InterestId: Int!) {
            delete_InterestDoctor_by_pk(DoctorId: $DoctorId, InterestId: $InterestId) {
              DoctorId
              InterestId
            }
          }
      - name: delete_IntersPatient
        query: |
          mutation delete_IntersPatient_by_pk ($PatientId: String!, $InterestId: Int!) {
            delete_IntersPatient_by_pk(PatientId: $PatientId, InterestId: $InterestId) {
              PatientId
              InterestId
            }
          }
      - name: delete_Questions_one
        query: |
          mutation delete_Questions_one ($QuestionId: Int!) {
            delete_Questions_by_pk(QuestionId: $QuestionId) {
              QuestionId
            }
          }
      - name: UpdateQuestion
        query: |
          mutation UpdateQuestion ($QuestionId: Int!, $question: Questions_set_input!) {
            update_Questions_by_pk(pk_columns: {QuestionId:$QuestionId}, _set: $question) {
              Category
              Description
              QuestionId
              Title
              User {
                FirstName
              }
            }
          }
      - name: deleteAnswer
        query: |
          mutation deleteAnswer ($AnswerId: Int!) {
            delete_Answers_by_pk(AnswerId: $AnswerId) {
              AnswerId
            }
          }
      - name: insert_IntersPatient_one
        query: |
          mutation insert_IntersPatient_one ($object: IntersPatient_insert_input!) {
            insert_IntersPatient_one(object: $object) {
              InterestId
              PatientId
            }
          }
      - name: SetUserInterests
        query: |
          mutation SetUserInterests ($interests: [InterestUser_insert_input!]!) {
            delete_InterestUser(where: {}) {
              affected_rows
            }
            insert_InterestUser(objects: $interests) {
              affected_rows
            }
          }
      - name: InsertDoctor
        query: |
          mutation InsertDoctor ($doctor: Doctors_insert_input!) {
            insert_Doctors_one(object: $doctor) {
              Degree
              University
              MedicalField
            }
          }
      - name: InsertPatient
        query: |
          mutation InsertPatient ($patient: Patients_insert_input!) {
            insert_Patients_one(object: $patient) {
              AgeGroup
              CancerStageId
              CancerTypeId
            }
          }
      - name: InsertUser
        query: |
          mutation InsertUser ($doctor: Doctors_insert_input!, $patient: Patients_insert_input!) {
            insert_Patients_one(object: $patient) {
              AgeGroup
              CancerStageId
              CancerTypeId
            }
            insert_Doctors_one(object: $doctor) {
              Degree
              MedicalField
              University
            }
          }
      - name: countryStates
        query: |
          query countryStates ($CountryCode: String!) @cached {
            Universities(where: {CountryCode:{_eq:$CountryCode}}, distinct_on: StateCode, order_by: {StateCode:asc}) {
              CountryName
              StateCode
              StateName
            }
          }
      - name: Universities
        query: |
          query Universities ($CountryCode: String!, $StateCode: String = null) @cached {
            Universities(where: {CountryCode:{_eq:$CountryCode},StateCode:{_eq:$StateCode}}) {
              CountryName
              StateCode
              StateName
              UniversityName
              UniversityId
            }
          }
      - name: UpdateDoctorStatus
        query: |
          mutation UpdateDoctorStatus ($userId: String!, $status: verification_status!, $time_now: timestamptz!) {
            update_Doctors(where: {UserId:{_eq:$userId},VerificationStatus:{_lt:"approved"}}, _set: {VerificationStatus:$status,UpdatedAt:$time_now}) {
              affected_rows
            }
          }
      - name: Contents_by_pk
        query: |
          query Contents_by_pk ($ContentId: Int!) {
            Contents_by_pk(ContentId: $ContentId) {
              Active
              AssignedTo
              Attachments
              AuthorUserId
              ContentId
              CreatedDate
              DeletedAt
              ParentContentId
              Phase
              Raw
              Tags
              Type
              UpdatedAt
              Visibility
            }
          }
      - name: Contents
        query: |
          query Contents {
            Contents {
              Active
              AssignedTo
              Attachments
              AuthorUserId
              ContentId
              CreatedDate
              DeletedAt
              ParentContentId
              Phase
              Raw
              Tags
              Type
              UpdatedAt
              Visibility
            }
          }
      - name: insert_Contents_one
        query: |
          mutation insert_Contents_one ($object: Contents_insert_input!) {
            insert_Contents_one(object: $object) {
              Active
              AssignedTo
              Attachments
              AuthorUserId
              ContentId
              CreatedDate
              DeletedAt
              ParentContentId
              Phase
              Raw
              Tags
              Type
              UpdatedAt
              Visibility
            }
          }
      - name: update_Contents_by_pk
        query: |
          mutation update_Contents_by_pk ($ContentId: Int!, $object: Contents_set_input!) {
            update_Contents_by_pk(pk_columns: {ContentId:$ContentId}, _set: $object) {
              Active
              AssignedTo
              Attachments
              AuthorUserId
              ContentId
              CreatedDate
              DeletedAt
              ParentContentId
              Phase
              Raw
              Tags
              Type
              UpdatedAt
              Visibility
            }
          }
      - name: delete_Contents_by_pk
        query: |
          mutation delete_Contents_by_pk ($ContentId: Int!) {
            delete_Contents_by_pk(ContentId: $ContentId) {
              Active
              AssignedTo
              Attachments
              AuthorUserId
              ContentId
              CreatedDate
              DeletedAt
              ParentContentId
              Phase
              Raw
              Tags
              Type
              UpdatedAt
              Visibility
            }
          }
      - name: CancerTypes
        query: |
          query CancerTypes ($lang: String = "en") @cached {
            CancerTypes {
              CancerId
              CancerTypeName
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
              }
            }
          }
      - name: cancer_stage
        query: |
          query cancer_stage ($lang: String = "en") @cached {
            CancerStages {
              StageName
              StageId
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
              }
            }
          }
      - name: Categories
        query: |
          query Categories ($lang: String = "en") @cached {
            Categories: Contents(where: {Type:{_eq:"category"}}) {
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
                Language
              }
              ContentId
            }
          }
      - name: QuestionsbyId
        query: |
          query QuestionsbyId ($QuestionId: Int!) {
            Questions_by_pk(QuestionId: $QuestionId) {
              CreatedDate
              QuestionId
              Category
              Description
              Title
              Patient: User {
                FirstName
              }
              Answers {
                AnswerId
                Content
                doctorByDoctorid {
                  User {
                    FirstName
                    LastName
                  }
                  MedicalField
                  Degree
                }
              }
            }
          }
      - name: Questions
        query: |
          query Questions ($limit: Int = 10, $offset: Int = 0) @cached {
            Questions(limit: $limit, offset: $offset) {
              CreatedDate
              QuestionId
              Category
              Description
              Title
              Patient: User {
                FirstName
              }
              Answers {
                AnswerId
                Content
                doctorByDoctorid {
                  User {
                    FirstName
                    LastName
                  }
                  MedicalField
                  Degree
                }
              }
            }
          }
      - name: insert_Questions_one
        query: |
          mutation insert_Questions_one ($question: Questions_insert_input!) {
            insert_Questions_one(object: $question) {
              Active
              Category
              Description
              QuestionId
              Title
              UserId
            }
          }
      - name: insert_Bookmarks_one
        query: |
          mutation insert_Bookmarks_one ($contentId: Int!) {
            insert_Bookmarks_one(object: {ContentId:$contentId,CreatedDate:"now()",DeletedAt:null}, on_conflict: {constraint:AK_Bookmarks_UserId_ContentId,update_columns:DeletedAt}) {
              ContentId
              CreatedDate
              BookmarkId
            }
          }
      - name: delete_Bookmarks_by_pk
        query: |
          mutation delete_Bookmarks_by_pk ($BookmarkId: Int!) {
            update_Bookmarks_by_pk(pk_columns: {BookmarkId:$BookmarkId}, _set: {DeletedAt:"now()"}) {
              BookmarkId
            }
          }
      - name: Bookmarks
        query: |
          query Bookmarks ($parentContentId: Int! = 1, $lang: String! = "en") {
            Bookmarks(where: {Content:{ParentContentId:{_eq:$parentContentId}}}) {
              BookmarkId
              ContentId
              CreatedDate
              Content {
                ContentId
                AssignedTo
                Attachments
                AuthorUserId
                CreatedDate
                Phase
                UpdatedAt
                Visibility
                Translations(where: {Language:{_eq:$lang}}) {
                  Translation
                  Language
                }
                Interests {
                  Interest {
                    InterestId
                    Translations(where: {Language:{_eq:$lang}}) {
                      Language
                      Translation
                    }
                    StyleBackgroundColorHex
                    StyleForegroundColorHex
                  }
                }
              }
            }
          }
      - name: UpdateUser
        query: |
          mutation UpdateUserAsUser ($user: UpdateUserInput!) {
            UpdateUserAsUser(user: $user) {
              userId
            }
          }
      - name: Me
        query: |
          query Me ($lang: String! = "en") {
            Users {
              AgreedTerms
              Email
              FirstName
              Gender
              LastName
              UserId
              InterestUsers {
                InterestsInterestId
                Interest {
                  Translations(where: {Language:{_eq:$lang}}) {
                    Translation
                    Language
                  }
                }
              }
              Doctor {
                CredentialsAttachments
                Degree
                DeletedAt
                MedicalField
                University
                VerificationStatus
              }
              Patient {
                AgeGroup
                CancerStageId
                CancerTypeId
                CancerStage {
                  Translations(where: {Language:{_eq:$lang}}) {
                    Translation
                  }
                }
                CancerType {
                  Translations(where: {Language:{_eq:$lang}}) {
                    Translation
                  }
                }
              }
            }
          }
      - name: Symptoms_by_pk
        query: |
          query Symptoms_by_pk ($SymptomId: Int!) {
            Symptoms_by_pk(SymptomId: $SymptomId) {
              Active
              CreatedDate
              DeletedAt
              Details
              Notes
              PatientUserId
              PhotoLink
              SymptomId
              SymptomLookupId
              Time
              UpdatedAt
            }
          }
      - name: countries
        query: |
          query Countries @cached(ttl: 600) {
            Universities(distinct_on: CountryCode, order_by: {CountryCode:asc}) {
              CountryName
              CountryCode
            }
          }
      - name: insert_Schedules_one
        query: |
          mutation insert_Schedules_one ($schedule: Schedules_insert_input!) {
            insert_Schedules_one(object: $schedule) {
              CronExpression
              Entity
              EntityType
              ScheduleId
            }
          }
      - name: Schedules
        query: |
          query Schedules ($entityType: schedule_entity_type! = "medication") {
            Schedules(where: {EntityType:{_eq:$entityType}}) {
              CronExpression
              Entity
              EntityType
              ScheduleId
            }
          }
      - name: update_Schedules_by_pk
        query: |
          mutation update_Schedules_by_pk ($ScheduleId: Int!, $schedule: Schedules_set_input!) {
            update_Schedules_by_pk(pk_columns: {ScheduleId:$ScheduleId}, _set: $schedule) {
              CronExpression
              Entity
              EntityType
              ScheduleId
            }
          }
      - name: ScheduleSymptom
        query: |
          query ScheduleSymptom {
            ScheduleSymptom {
              SchedulesScheduleId
              SymptomId
            }
          }
      - name: delete_ScheduleSymptom_by_pk
        query: |
          mutation delete_ScheduleSymptom_by_pk ($SchedulesScheduleId: Int!, $SymptomId: Int!) {
            delete_ScheduleSymptom_by_pk(SchedulesScheduleId: $SchedulesScheduleId, SymptomId: $SymptomId) {
              SchedulesScheduleId
              SymptomId
            }
          }
      - name: SymptomLookups
        query: |
          query SymptomLookups ($lang: String! = "en") {
            SymptomLookups {
              SymptomLookupId
              Translations(where: {Language:{_eq:$lang}}) {
                Language
                Translation
              }
            }
          }
      - name: Articles
        query: |
          query Articles ($categoryContentId: Int! = 1, $lang: String! = "en", $search: String = "%", $refresh: Boolean! = false) @cached(ttl: 600, refresh: $refresh) {
            Articles: Contents(where: {ParentContentId:{_eq:$categoryContentId},FlattenedTranslations:{value:{_similar:$search}}}, order_by: {UpdatedAt:desc_nulls_last,CreatedDate:desc_nulls_first}) {
              ContentId
              AssignedTo
              Attachments
              AuthorUserId
              CreatedDate
              Phase
              UpdatedAt
              Visibility
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
                Language
              }
              Interests {
                Interest {
                  InterestId
                  Translations(where: {Language:{_eq:$lang}}) {
                    Language
                    Translation
                  }
                  StyleBackgroundColorHex
                  StyleForegroundColorHex
                }
              }
            }
          }
      - name: future_schedules
        query: |
          query schedules {
            Schedules {
              ScheduledEvents {
                events {
                  scheduled_time
                }
              }
              ScheduleId
              Entity
              EntityType
            }
          }
      - name: UploadUrl
        query: |
          query UploadUrl ($path: String!) {
            getUploadUrl(filePath: $path) {
              signedUrl
              path
            }
          }
      - name: delete_Symptoms_by_pk
        query: |
          mutation delete_Symptoms_by_pk ($SymptomId: Int!) {
            delete_Symptoms_by_pk(SymptomId: $SymptomId) {
              SymptomId
              SymptomLookupId
            }
          }
      - name: OneOffSchedules_by_pk
        query: |
          query OneOffSchedules_by_pk ($ScheduleId: Int!) {
            OneOffSchedules_by_pk(ScheduleId: $ScheduleId) {
              Active
              CreatedDate
              DeletedAt
              Entity
              EntityType
              ScheduleId
              StartDate
              UpdatedAt
              UserId
            }
          }
      - name: update_OneOffSchedules_by_pk
        query: |
          mutation update_OneOffSchedules_by_pk ($ScheduleId: Int!, $object: OneOffSchedules_set_input!) {
            update_OneOffSchedules_by_pk(pk_columns: {ScheduleId:$ScheduleId}, _set: $object) {
              Active
              CreatedDate
              DeletedAt
              Entity
              EntityType
              ScheduleId
              StartDate
              UpdatedAt
              UserId
            }
          }
      - name: delete_OneOffSchedules_by_pk
        query: |
          mutation delete_OneOffSchedules_by_pk ($ScheduleId: Int!) {
            delete_OneOffSchedules_by_pk(ScheduleId: $ScheduleId) {
              Active
              CreatedDate
              DeletedAt
              Entity
              EntityType
              ScheduleId
              StartDate
              UpdatedAt
              UserId
            }
          }
      - name: Resources
        query: |
          query Resources ($lang: String = "en", $refresh: Boolean! = true) @cached(ttl: 600, refresh: $refresh) {
            CancerStages {
              StageId
              LogoURL
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
              }
            }
            CancerTypes {
              CancerId
              LogoURL
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
              }
            }
            PatientInterests: Interests(where: {TargetUserType:{_eq:"patient"}}) {
              InterestId
              LogoURL
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
              }
              StyleBackgroundColorHex
              StyleForegroundColorHex
            }
            DoctorInterests: Interests(where: {TargetUserType:{_eq:"doctor"}}) {
              InterestId
              LogoURL
              Translations(where: {Language:{_eq:$lang}}) {
                Translation
              }
              StyleBackgroundColorHex
              StyleForegroundColorHex
            }
            Photos {
              PhotoURL
              Usage
            }
          }
      - name: Symptoms
        query: |
          query Symptoms ($lang: String! = "en", $refresh: Boolean! = false) @cached(ttl: 600, refresh: $refresh) {
            Symptoms(order_by: {Time:desc_nulls_first}) {
              Details
              SymptomLookupId
              UpdatedAt
              SymptomLookup {
                Translations(where: {Language:{_eq:$lang}}) {
                  Translation
                  Language
                }
              }
              PhotoLink
              DownloadPhotoLink: Symptom_File {
                url
              }
              DownloadPhotoLinks: Symptom_File2 {
                urls {
                  signed_url
                }
              }
              SymptomId
              Notes
              Time
              SymptomLookups: SymptomSyptomLookup {
                Details: SymptomLookupDetails {
                  Translations(where: {Language:{_eq:$lang}}) {
                    Translation
                    Language
                  }
                  SymptomLookupId
                }
              }
            }
          }
      - name: insert_Symptoms_one
        query: |
          mutation insert_Symptoms_one ($symptom: Symptoms_insert_input!) {
            insert_Symptoms_one(object: $symptom) {
              SymptomId
              PhotoDownloadLink: Symptom_File {
                url
              }
              PhotoDownloadLinks: Symptom_File2 {
                urls {
                  path
                  signed_url
                }
              }
            }
          }
      - name: update_Symptoms_by_pk
        query: |
          mutation update_Symptoms_by_pk ($SymptomId: Int!, $symptom: Symptoms_set_input!) {
            update_Symptoms_by_pk(pk_columns: {SymptomId:$SymptomId}, _set: $symptom) {
              Details
              Notes
              Time
              PhotoDownloadLink: Symptom_File {
                url
              }
              PhotoDownloadLinks: Symptom_File2 {
                urls {
                  path
                  signed_url
                }
              }
            }
          }
      - name: OneOffSchedules
        query: |
          query OneOffSchedules {
            OneOffSchedules {
              Entity
              EntityType
              ScheduleId
              StartDate
              PhotoLink
              DownloadPhotoLinks {
                urls {
                  path
                  signed_url
                }
              }
            }
          }
      - name: insert_OneOffSchedules_one
        query: |
          mutation insert_OneOffSchedules_one ($object: OneOffSchedules_insert_input!) {
            insert_OneOffSchedules_one(object: $object) {
              CreatedDate
              Entity
              EntityType
              ScheduleId
              StartDate
              PhotoLink
              DownloadPhotoLinks {
                urls {
                  path
                  signed_url
                }
              }
            }
          }
      - name: delete_Schedules_by_pk
        query: |
          mutation delete_Schedules_by_pk ($ScheduleId: Int!) {
            delete_Schedules_by_pk(ScheduleId: $ScheduleId) {
              ScheduleId
            }
          }
      - name: insert_ScheduleSymptom_one
        query: |
          mutation insert_ScheduleSymptom_one($object: ScheduleSymptom_insert_input!) {
            insert_ScheduleSymptom_one(object: $object) {
              SchedulesScheduleId
              SymptomId
            }
          }

